# Super Grub Disk Main Configuration file
# Copyright (C) 2009  Adrian Gibanel Lopez.
#
# Super Grub Disk is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Super Grub Disk is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with GRUB.  If not, see <http://www.gnu.org/licenses/>.

insmod biosdisk
insmod part_acorn
insmod part_amiga
insmod part_apple
insmod part_gpt
insmod part_msdos
insmod part_sun

# Prepare environment variables needed by some scripts

source /boot/grub/prepare-supergrub-environment.lua

# Define a function for updating paths when device names change.
# search.mod is required for update-paths, and must be loaded before device
# names change because $prefix will be invalid.
# prepare-supergrub-environment.lua also needs to be run before update-paths
# because update-paths uses $prefix_uuid and $prefix_path.

insmod search

function update-paths {
  search --fs-uuid --set=prefix_device $prefix_uuid
  prefix="(${prefix_device}$){prefix_path}"
  script_prefix="${prefix_device}${script_path}"
}
# Set OSes names

set ubuntu_os_name="Ubuntu"
set linux_os_name="Gnu/Linux"


# Timeout for menu
#set timeout=10

# Set default boot entry as Entry 0
set default=0

# Entry 0 - TEST! Load first Kernel and Initrd (initrd support)
menuentry "Boot ${ubuntu_os_name} ${linux_os_name}" {
 set sgd_vmlinuz_path=/vmlinuz
 set sgd_initrd_path=/initrd.img
 search --set=sgd_linux_kernel -f $sgd_vmlinuz_path
 search --set=sgd_linux_initrd -f $sgd_initrd_path
 probe -u ($sgd_linux_kernel) --set=sgd_root_uuid
 set root=$sgd_linux_kernel
 linux ($sgd_linux_kernel)$sgd_vmlinuz_path root=UUID=$sgd_root_uuid
 initrd ($sgd_linux_initrd)$sgd_initrd_path
 boot
}

# Entry 1 - Load osdetect lua script as a new menu
menuentry "Detect any OS" {
 configfile $script_prefix/osdetect.lua
}

# Entry 2 - Load cfgdetect lua script as a new menu
menuentry "Detect any GRUB2 configuration file ( grub.cfg )" {
 configfile $script_prefix/cfgdetect.lua
}

# Entry 3 - Load grubdetect lua script as a new menu
menuentry "Detect any GRUB2 installation (even if mbr is overwritten)" {
  configfile $script_prefix/grubdetect.lua
}

# Entry 4 - Load isodetect lua script as a new menu
menuentry "Detect loop bootable isos (in /boot-isos or /boot/boot-isos)" {
  configfile $script_prefix/isodetect.lua
}

# Entry 5
menuentry "Enable grub's LVM support" {
  insmod lvm
}

# Entry 6
menuentry "Enable grub's RAID support" {
  insmod raid
}

# Entry 7
menuentry "Enable grub's PATA support (to work around BIOS bugs/limitations)" {
  insmod ata
  update-paths
}

# Entry 8
menuentry "Enable grub's USB support *experimental*" {
  insmod ohci
  insmod uhci
  insmod usbms
  update-paths
}

# Entry 9
menuentry "Switch to serial terminal (Disables keyboard input and screen output)" {
  serial
  terminal_input serial
  terminal_output serial
}
